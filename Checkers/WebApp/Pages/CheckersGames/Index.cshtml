@page
@using Domain
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using WebApp.MyLibraries
@using Common
@model WebApp.Pages.CheckersGames.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<div class="d-flex gap-4">
    <form method="GET">
        <label for="playerNameQuery">Search by player name</label><br/>
        <input id="playerNameQuery" type="search" name="playerNameQuery" value="@Model.PlayerNameQuery"/>
        <button type="submit">Search</button>
    </form>
    <form method="GET">
        <label for="rulesetNameQuery">Search by ruleset name</label><br/>
        <input id="rulesetNameQuery" type="search" name="rulesetNameQuery" value="@Model.RulesetNameQuery"/>
        <button type="submit">Search</button>
    </form>
    <form method="GET">
        <label for="aiQuery">Search by AI</label><br/>
        <select id="aiQuery" asp-items="@Utils.AiTypeOptionsSelected(Model.AiQuery)" name="aiQuery"></select>
        <button type="submit" name="aiQuerySubmit" value="@true.ToString()">Search</button>
    </form>
    <form method="GET">
        <label for="completionFilter">Filter by completion</label><br/>
        <select id="completionFilter" asp-items="@CompletionFilterOptions(Model.CompletionFilter ?? ECompletionFilter.Ongoing)" name="completionFilter"></select>
        <button type="submit">Search</button>
    </form>
</div>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].WhitePlayerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].BlackPlayerName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].WhiteAiType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].BlackAiType)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].CheckersRuleset)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].StartedAt) (UTC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].EndedAt) (UTC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Winner)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].DrawProposedBy)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Entities)
    {
        <tr>
            <td>
                <a asp-page="./Launch" asp-route-id="@item.Id" class="btn btn-primary">@GameLaunchButtonText(item)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                <a asp-page="./Play" asp-route-id="@item.Id" asp-route-playerId="@item.WhitePlayerName">@item.WhitePlayerName</a>
            </td>
            <td>
                <a asp-page="./Play" asp-route-id="@item.Id" asp-route-playerId="@item.BlackPlayerName">@item.BlackPlayerName</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WhiteAiType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BlackAiType)
            </td>
            <td>
                <a asp-page="/CheckersRulesets/Details" asp-route-id="@item.CheckersRulesetId">
                    @Html.DisplayFor(modelItem => item.CheckersRuleset!.TitleText)
                </a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StartedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EndedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Winner)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DrawProposedBy)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>

@functions
{
    static string GameLaunchButtonText(CheckersGame checkersGame)
    {
        return checkersGame.Ended ? "Results" : "Play";
    }

    IEnumerable<SelectListItem> CompletionFilterOptions(ECompletionFilter? selected = null)
    {
        return Utils.EnumOptions(typeof(ECompletionFilter), selected: selected);
    }
}