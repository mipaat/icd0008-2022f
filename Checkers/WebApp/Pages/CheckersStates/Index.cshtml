@page
@using WebApp.MyLibraries
@model IndexModel

@{
    ViewData["Title"] = "CheckersStates";
}

<h1>
    CheckersStates
</h1>
<h2 class="alert-warning">
    Modifying these might corrupt their related CheckersGame!
</h2>

@if (Model.CheckersGameId != null)
{
    <div class="fs-4 mb-3">
        Showing CheckersStates for:
        <a asp-page="/CheckersGames/Details" asp-route-id="@Model.CheckersGameId" class="small card card-body bg-light">@Model.CheckersGame!.ToString(true)</a>
    </div>
}

<table class="table">
    <thead>
    <tr>
        @if (Model.CheckersGameId == null)
        {
            <th>
                @Html.DisplayNameFor(model => model.Entities[0].CheckersGameId)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].CreatedAt) (UTC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].SerializedGamePieces)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].WhiteMoves)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].BlackMoves)
        </th>
        <th>Last move end</th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @for (var i = 0; i < Model.Entities.Count; i++)
    {
        <tr>
            @{ var item = Model.Entities[i]; }
            @if (Model.CheckersGameId == null)
            {
                <td>
                    <a asp-page="/CheckersGames/Details" asp-route-id="@Model.CheckersGameId">@Html.DisplayFor(modelItem => item.CheckersGameId)</a>
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @if (item.SerializedGamePieces.Length > 50)
                {
                    <div class="collapse expandGamePieces-@i show" id="gamePiecesShortened-@i">
                        @Utils.ShortenSerializedGamePieces(item)
                        <a data-bs-toggle="collapse"
                           href=".expandGamePieces-@i"
                           role="button"
                           aria-expanded="false"
                           aria-controls="gamePiecesExpanded-@i gamePiecesShortened-@i">
                            Expand
                        </a>
                    </div>
                    <div class="collapse expandGamePieces-@i" id="gamePiecesExpanded-@i">
                        <div class="card card-body game-pieces-expanded-content">
                            @item.SerializedGamePieces
                        </div>
                        <a data-bs-toggle="collapse"
                           href=".expandGamePieces-@i"
                           role="button"
                           aria-expanded="true"
                           aria-controls="gamePiecesExpanded-@i gamePiecesShortened-@i">
                            Show less
                        </a>
                    </div>
                }
                @if (item.SerializedGamePieces.Length <= 50)
                {
                    <div class="card card-body">
                        @item.SerializedGamePieces
                    </div>
                }
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.WhiteMoves)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BlackMoves)
            </td>
            <td>
                @Utils.GetCheckersStateLastMovedToString(item)
            </td>
            <td class="d-flex flex-column align-items-center">
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>