@page
@model IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<p>
    <a asp-page="" asp-route-showNonSaved="@(!Model.ShowNonSaved)">@(Model.ShowNonSaved ? "Show only saved rulesets" : "Show non-saved rulesets as well")</a>
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Id)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].BuiltIn)
        </th>
        @if (Model.ShowNonSaved)
        {
            <th>
                @Html.DisplayNameFor(model => model.Entities[0].Saved)
            </th>
        }
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Width)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Height)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Title)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].CreatedAt) (UTC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].LastModified) (UTC)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].BlackMovesFirst)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].MustCapture)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].CanCaptureBackwards)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].CanCaptureBackwardsDuringMultiCapture)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Entities[0].FlyingKings)
        </th>
        <th></th>
    </tr>
    </thead>
    <tbody>
    @foreach (var item in Model.Entities)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BuiltIn)
            </td>

            @if (Model.ShowNonSaved)
            {
                <td>
                    @Html.DisplayFor(modelItem => item.Saved)
                </td>
            }
            <td>
                @Html.DisplayFor(modelItem => item.Width)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Height)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModified)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.BlackMovesFirst)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.MustCapture)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CanCaptureBackwards)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CanCaptureBackwardsDuringMultiCapture)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FlyingKings)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-page="./Details" asp-route-id="@item.Id">Details</a>
                @if (item.Saved && !item.BuiltIn)
                {
                    @: |
                    <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                }
            </td>
        </tr>
    }
    </tbody>
</table>