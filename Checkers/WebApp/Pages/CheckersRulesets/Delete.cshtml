@page
@model DeleteModel

@{
    ViewData["Title"] = "Delete";
}

<h1>Delete</h1>

<h3>Are you sure you want to delete this?</h3>
<div>
    <h4>CheckersRuleset</h4>
    <hr/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.BuiltIn)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.BuiltIn)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.Saved)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.Saved)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.Width)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.Width)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.Height)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.Height)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.CreatedAt) (UTC)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.CreatedAt)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.LastModified) (UTC)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.LastModified)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.BlackMovesFirst)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.BlackMovesFirst)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.MustCapture)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.MustCapture)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.CanCaptureBackwards)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.CanCaptureBackwards)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.CanCaptureBackwardsDuringMultiCapture)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.CanCaptureBackwardsDuringMultiCapture)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Entity.FlyingKings)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Entity.FlyingKings)
        </dd>
    </dl>

    <form method="post">
        <input type="hidden" asp-for="Entity.Id"/>
        <input type="submit" value="Delete" class="btn btn-danger"/> |
        <a asp-page="./Index">Back to List</a>
    </form>
</div>